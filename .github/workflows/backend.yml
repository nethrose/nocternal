name: Backend CI

on:
  push:
    branches-ignore:
      - main
    paths:
      - 'backend/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Install dependencies
      run: |
        cd backend
        npm ci

    - name: Run tests
      run: |
        cd backend
        npm test

    - name: Add trusted source
      env:
        DO_API_TOKEN: ${{ secrets.DO_API_TOKEN }}
      run: |
        IP=$(curl -s https://api.github.com/meta | jq '.actions[]' -r)
        DATABASE_ID=${{ secrets.DATABASE_ID }}
        for ip in $IP; do
          curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer $DO_API_TOKEN" -d "{\"type\":\"ip_addr\",\"value\":\"$ip\"}" "https://api.digitalocean.com/v2/databases/$DATABASE_ID/firewall"
        done

    - name: Start the application
      run: |
        cd backend
        npm start &

    - name: Wait for the application to start
      run: |
        cd backend
        until $(curl --output /dev/null --silent --head --fail http://localhost:3001); do
          printf '.'
          sleep 5
        done

    - name: Remove trusted source
      env:
        DO_API_TOKEN: ${{ secrets.DO_API_TOKEN }}
      run: |
        IP=$(curl -s https://api.github.com/meta | jq '.actions[]' -r)
        DATABASE_ID=${{ secrets.DATABASE_ID }}
        RULES=$(curl -X GET -H "Content-Type: application/json" -H "Authorization: Bearer $DO_API_TOKEN" "https://api.digitalocean.com/v2/databases/$DATABASE_ID/firewall" | jq '.rules[] | .uuid' -r)
        for rule_uuid in $RULES; do
          for ip in $IP; do
            curl -X DELETE -H "Content-Type: application/json" -H "Authorization: Bearer $DO_API_TOKEN" "https://api.digitalocean.com/v2/databases/$DATABASE_ID/firewall/$rule_uuid"
          done
        done
